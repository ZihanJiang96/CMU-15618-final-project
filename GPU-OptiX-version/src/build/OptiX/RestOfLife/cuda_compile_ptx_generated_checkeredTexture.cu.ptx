//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-27506705
// Cuda compilation tools, release 10.2, V10.2.89
// Based on LLVM 3.4svn
//

.version 6.5
.target sm_61
.address_size 64

	// .globl	_Z13sampleTextureff6float3
.visible .global .align 4 .b8 odd[4];
.visible .global .align 4 .b8 even[4];
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo3oddE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo4evenE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.visible .global .align 1 .b8 _ZN21rti_internal_typename3oddE[50] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 102, 108, 111, 97, 116, 51, 40, 102, 108, 111, 97, 116, 44, 32, 102, 108, 111, 97, 116, 44, 32, 102, 108, 111, 97, 116, 51, 41, 62, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename4evenE[50] = {114, 116, 67, 97, 108, 108, 97, 98, 108, 101, 80, 114, 111, 103, 114, 97, 109, 73, 100, 60, 102, 108, 111, 97, 116, 51, 40, 102, 108, 111, 97, 116, 44, 32, 102, 108, 111, 97, 116, 44, 32, 102, 108, 111, 97, 116, 51, 41, 62, 0};
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum3oddE = 4920;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum4evenE = 4920;
.visible .global .align 1 .b8 _ZN21rti_internal_semantic3oddE[1];
.visible .global .align 1 .b8 _ZN21rti_internal_semantic4evenE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation3oddE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation4evenE[1];

.visible .func  (.param .align 4 .b8 func_retval0[12]) _Z13sampleTextureff6float3(
	.param .b32 _Z13sampleTextureff6float3_param_0,
	.param .b32 _Z13sampleTextureff6float3_param_1,
	.param .align 4 .b8 _Z13sampleTextureff6float3_param_2[12]
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<27>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<7>;


	ld.param.f32 	%f13, [_Z13sampleTextureff6float3_param_0];
	ld.param.f32 	%f14, [_Z13sampleTextureff6float3_param_1];
	ld.param.f32 	%f3, [_Z13sampleTextureff6float3_param_2+8];
	ld.param.f32 	%f2, [_Z13sampleTextureff6float3_param_2+4];
	ld.param.f32 	%f1, [_Z13sampleTextureff6float3_param_2];
	mul.ftz.f32 	%f15, %f1, 0f41200000;
	sin.approx.ftz.f32 	%f16, %f15;
	mov.f32 	%f17, 0f41200000;
	sub.ftz.f32 	%f18, %f17, %f2;
	sin.approx.ftz.f32 	%f19, %f18;
	mul.ftz.f32 	%f20, %f16, %f19;
	mul.ftz.f32 	%f21, %f3, 0f41200000;
	sin.approx.ftz.f32 	%f22, %f21;
	mul.ftz.f32 	%f23, %f20, %f22;
	setp.lt.ftz.f32	%p1, %f23, 0f00000000;
	@%p1 bra 	BB0_2;
	bra.uni 	BB0_1;

BB0_2:
	ld.global.u32 	%r2, [odd];
	mov.u64 	%rd5, 0;
	// inline asm
	call (%rd4), _rt_callable_program_from_id_v2_64, (%r2, %rd5);
	// inline asm
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f13;
	.param .b32 param1;
	st.param.f32	[param1+0], %f14;
	.param .align 4 .b8 param2[12];
	st.param.f32	[param2+0], %f1;
	st.param.f32	[param2+4], %f2;
	st.param.f32	[param2+8], %f3;
	.param .align 4 .b8 retval0[12];
	prototype_1 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b32 _, .param .b32 _, .param .align 4 .b8 _[12]) ;
	call (retval0), 
	%rd4, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_1;
	ld.param.f32	%f24, [retval0+0];
	ld.param.f32	%f25, [retval0+4];
	ld.param.f32	%f26, [retval0+8];
	
	//{
	}// Callseq End 1
	bra.uni 	BB0_3;

BB0_1:
	ld.global.u32 	%r1, [even];
	mov.u64 	%rd2, 0;
	// inline asm
	call (%rd1), _rt_callable_program_from_id_v2_64, (%r1, %rd2);
	// inline asm
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.f32	[param0+0], %f13;
	.param .b32 param1;
	st.param.f32	[param1+0], %f14;
	.param .align 4 .b8 param2[12];
	st.param.f32	[param2+0], %f1;
	st.param.f32	[param2+4], %f2;
	st.param.f32	[param2+8], %f3;
	.param .align 4 .b8 retval0[12];
	prototype_0 : .callprototype (.param .align 4 .b8 _[12]) _ (.param .b32 _, .param .b32 _, .param .align 4 .b8 _[12]) ;
	call (retval0), 
	%rd1, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_0;
	ld.param.f32	%f24, [retval0+0];
	ld.param.f32	%f25, [retval0+4];
	ld.param.f32	%f26, [retval0+8];
	
	//{
	}// Callseq End 0

BB0_3:
	st.param.f32	[func_retval0+0], %f24;
	st.param.f32	[func_retval0+4], %f25;
	st.param.f32	[func_retval0+8], %f26;
	ret;
}


